import React from 'react';
import '../styles/Game.css';

const random = (min,max) => {
  return Math.floor(Math.random() * (max - min) + min);
}

const Hole = ({whenHoleClick, no}) => {
  return (
    <div className={`hole hole${no}`} onClick={e => whenHoleClick(e)} data-active='no'>
      <svg className="frog" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50">
        <path fill="none" stroke="blue" d="M14.5329 3.9166c0,0.5105 0.6977,1.0686 0.6977,1.9937l0.039 1.4012 -0.2383 1.4897c-0.8765,-0.0729 -1.6992,-1.7943 -2.1931,-1.7943 -0.4239,0 -0.6978,0.3097 -0.6978,0.6978 0,0.1878 0.8977,0.668 1.123,0.8707 0.4404,0.3962 0.58,0.6823 0.9105,1.1829 0.307,0.4649 1.5463,1.8602 1.9539,2.1331 0,0.9876 0.2431,2.8557 0.4237,3.7631 0.1116,0.5607 0.191,1.1446 0.3121,1.7813 0.1868,0.9818 0.3879,0.6674 1.0226,1.0709 0.4365,0.2774 1.3805,1.9309 1.7306,2.4561 0.2528,0.3793 0.5473,0.8981 0.8689,1.2245 0.4533,0.46 1.2245,0.3583 1.2245,0.8689l0 0.4984c0,0.1854 -0.7759,1.6161 -0.9605,2.2295 -0.1932,0.6417 -0.3354,2.0561 -0.3354,2.8545 0,3.2429 2.268,4.0726 2.2928,5.1836 -0.7691,0.1792 -1.5694,0.2268 -2.3705,0.4207 -0.8092,0.1959 -1.5218,0.3526 -2.3175,0.5734 -0.7024,0.1949 -1.4542,0.4404 -1.9913,0.7999 -0.4322,0.2893 -1.1959,1.0535 -1.1959,1.695l0 0.7975c0,0.7502 0.9299,2.5245 1.2623,3.1238 0.1941,0.3499 1.4973,2.8214 1.5289,2.957 -1.1005,-0.2564 -3.7873,-0.3297 -4.4858,-0.7975 0,-0.7481 0.0279,-1.467 0.1057,-2.1871 0.0728,-0.6748 0.6917,-1.6903 0.6917,-1.7006l0 -0.1994c0,-0.3344 -0.6713,-0.5981 -0.8971,-0.5981 -0.2235,0 -0.2188,0.0789 -0.3988,0.1993 0,0.7639 0.0766,1.2422 -0.1679,1.8258 -0.1025,0.2447 -0.4417,1.4639 -0.6295,1.4639 -0.3765,0 -0.7919,-1.3787 -0.9114,-1.7802 -0.27,-0.9073 -0.1852,-1.4105 -0.1852,-2.3069 0,-0.1904 -0.1911,-0.4136 -0.3016,-0.4171l-0.9798 0.13 -0.2139 0.2871c0.2634,1.1302 0.8972,1.7941 0.8972,3.3893l0 0.4984c0,0.1631 -0.0597,0.2991 -0.1994,0.2991 -0.3377,0 -1.3977,-1.3955 -1.5949,-1.6947 -0.1803,-0.2735 -0.5542,-0.674 -0.663,-0.932 -0.1864,-0.4421 -0.0427,-1.1614 -0.5332,-1.1614l-0.0997 0c-0.5132,0 -1.0966,0.1964 -1.0966,0.6978 0,0.1242 0.6467,0.6692 0.7735,0.8215 0.2042,0.2451 0.4136,0.6993 0.6008,0.9942 0.281,0.4426 1.073,1.633 1.1179,2.1717 -1.1379,0 -2.2722,-0.3927 -3.1502,-0.7376 -0.5067,-0.199 -0.8986,-0.3375 -1.3376,-0.5564 -0.4104,-0.2046 -0.7688,-0.7994 -1.1943,-0.7994 -0.2935,0 -0.5981,0.5732 -0.5981,0.8972l0 0.1994c0,0.5534 0.9349,0.4488 1.4294,0.6639 0.5788,0.2517 0.7117,0.4161 1.4473,0.6461 0.6168,0.1929 2.9365,1.1681 3.1044,1.1821l0 0.1994c-0.8999,0 -2.0256,-0.4985 -2.4921,-0.4985 -0.3065,0 -0.3988,0.2921 -0.3988,0.5982l0 0.1993c0,0.2815 0.2288,0.3846 0.4017,0.5155l0.7946 -0.1168c0.8037,-0.1357 2.3659,0.7504 3.3939,0.6296l1.69 -0.2308c0.246,-0.0366 2.9297,0.45 3.5879,0.4992 1.3004,0.0973 2.6493,0.0989 3.9882,0.0989l0.5981 0c0.5988,0 1.1962,-0.5974 1.1962,-1.1962l0 -0.4984c0,-1.9561 -1.9937,-5.1395 -1.9913,-6.6073l3.0879 0.2274 0.8971 0c1.0604,0 1.7723,-0.4984 2.4922,-0.4984l0.3987 0c0.4528,0 0.6852,0.3608 1.1982,0.3153l5.5804 -0.7141c-0.4559,0.6809 -1.6947,2.0978 -1.6947,3.0903 0,0.4852 0.5632,0.9968 1.0966,0.9968l0.1993 0c1.0696,0 4.7716,-2.1157 5.6024,-2.6715 0.6791,-0.4544 2.0411,-0.7952 2.9307,-1.1564 1.001,-0.4065 1.8937,-0.957 3.2298,-0.957 0.1205,-0.1799 0.1994,-0.1752 0.1994,-0.3987l0 -0.3987c0,-0.2069 -0.2916,-0.4985 -0.3988,-0.4985 -0.2565,0 -1.3564,0.8972 -2.3924,0.8972l-0.3987 0c0.0591,-0.7109 1.4038,-2.351 1.8692,-2.816 0.5106,-0.51 0.6146,-0.6733 1.0486,-1.2441 0.4126,-0.5427 1.0696,-0.7562 1.0696,-1.3229 0,-0.2934 -0.5873,-0.7975 -0.8972,-0.7975 -0.4893,0 -0.6235,0.9063 -0.861,1.3321 -0.0994,0.1781 -0.8841,1.064 -1.057,1.2357 -0.4778,0.4743 -1.7127,2.0629 -2.3685,2.1174 0.179,-0.7682 0.4035,-1.6301 0.5767,-2.3142 0.1114,-0.44 0.7192,-2.1558 0.7192,-2.1716l0 -0.0997c0,-0.355 -0.5436,-0.3987 -0.8971,-0.3987 -0.2352,0 -0.4436,0.1955 -0.5981,0.299 0,1.4533 -0.0222,1.7902 -0.5982,2.9906 -0.5528,-0.3702 -0.7213,-0.8972 -1.6946,-0.8972l0 -1.3956c0,-0.2297 -0.0694,-0.299 -0.299,-0.299l-0.1994 0c-0.4041,0 -0.8972,0.1074 -0.8972,0.4984l0 0.0997c0,0.5205 0.2841,0.4268 0.2895,1.0271l-3.8782 0.5678c0.5606,-0.7651 0.9584,-0.758 1.2599,-2.1293 0.1419,-0.6452 0.3351,-2.3814 0.3351,-3.0543l0 -0.5981c0,-0.6653 -0.2849,-0.6614 -0.2991,-1.2959 0.6126,0.4102 1.3011,0.8402 1.9127,1.2773 0.4654,0.3325 1.3113,1.4142 1.8754,1.4142 0.5685,0 4.2513,-3.3715 4.9559,-3.9161 0.6913,-0.5344 2.1369,-0.7337 3.0383,-1.4475 0.3969,-0.3143 0.7117,-0.7676 1.1011,-1.092 0.3838,-0.3197 1.3716,-0.5456 1.3716,-0.9211l0 -0.1994c0,-0.2324 -0.266,-0.4984 -0.4984,-0.4984l-0.0997 0c-0.3272,0 -1.5654,1.3543 -2.0934,1.4953 0.0798,-0.959 0.6266,-1.6567 0.9951,-2.3943 0.4063,-0.8132 1.6964,-1.3341 1.6964,-1.6928 0,-0.2777 -0.4201,-0.6978 -0.6978,-0.6978l-0.1993 0c-0.5357,0 -1.6301,3.0902 -3.0903,3.0902l-0.299 0c-0.3812,0 -0.0363,0.0306 -0.2991,-0.0997 0.1397,-0.5232 1.894,-2.9423 1.894,-2.9905 0,-0.3223 -0.3618,-0.4985 -0.6978,-0.4985l-0.0997 0c-0.2815,0 -0.3845,0.2288 -0.4984,0.3988 0,0.9358 -0.7202,1.6741 -1.2213,2.168 -0.5882,0.5798 -0.868,1.7197 -1.7692,1.7197l-0.0997 0c-1.3036,0 -2.7646,-0.8972 -2.8909,-0.8972 -0.323,0 -0.5981,0.4332 -0.5981,0.7975l0 0.0997c0,0.6298 3.2896,0.5721 3.2896,1.3956 0,0.2444 -3.0426,2.8909 -3.2896,2.8909l-0.0997 0c-0.7645,0 -1.4778,-1.2258 -1.9686,-1.7198 -0.4751,-0.4782 -1.6106,-1.2483 -2.1929,-1.5732l-0.2246 -1.8907c0.3519,-0.5255 0.3102,-1.0243 0.1779,-1.8728 -0.1971,-1.2637 0.3205,-1.1134 0.3205,-1.8155l0 -0.1994c0,-0.4845 -0.5637,-0.9107 -0.8718,-1.2216 -0.3215,-0.3242 -0.6155,-0.8577 -0.8243,-1.269 -0.4595,-0.9052 -0.9024,-1.9952 -2.2913,-1.9952l-0.1994 0c-1.3859,0 -2.0492,1.2983 -2.9087,1.9759 -1.8801,1.482 -1.6768,0.2025 -1.6768,3.108 0,0.4439 -0.482,1.2226 -0.6034,2.1878 -0.0508,0.4037 -0.8247,1.6043 -1.0913,1.7996 -0.2218,-0.1485 -1.1103,-1.3598 -1.52,-1.7695 -0.6586,-0.6586 -0.9284,-1.0349 -1.4314,-1.8582 -0.5054,-0.8273 -0.6104,-1.3883 -0.7464,-2.5433 -0.103,-0.8752 -0.4889,-2.156 -0.4889,-2.8006l0 -0.3988c0,-0.3853 1.0169,-1.7577 1.3107,-1.9789 0.3296,-0.2481 1.7795,-1.2553 1.7795,-1.6098 0,-0.1949 -0.4697,-0.4984 -0.7975,-0.4984 -0.1171,0 -1.8609,1.6716 -2.193,1.894 0,-0.825 0.2117,-1.5276 0.3074,-2.2843 0.1045,-0.8266 0.8888,-1.4977 0.8888,-1.7031l0 -0.0997c0,-0.3229 -0.4332,-0.598 -0.7975,-0.598l-0.2991 0c-0.2011,0.8634 -0.0638,1.124 -0.4633,1.9291 -0.1658,0.334 -0.623,1.5598 -0.9323,1.5598 -0.9231,0 -1.0734,-0.8014 -1.2201,-1.6707 -0.1352,-0.8009 -0.3748,-1.6357 -0.377,-2.6125l-0.4963 -0.3023c-0.3032,0.0707 -0.7974,0.1413 -0.7974,0.4984z"/>
      </svg>
    </div>
  )
}

class Game extends React.Component {
  state = { game: true, score: 0, time: true }

  checkButton = () => {
    if (this.state.game) {
      return (
        <button className="button" onClick={this.playGame}>
            <span></span>
            <span></span>
            <span></span>
            <span></span>
            Play
        </button>
      )
    }
  }

  onClickHole = (e) => {
    const a = e.currentTarget.dataset.active;
    if (a === 'yes') {
      let s = this.state.score;
      s++
      this.setState({ score: s});
    }
  }

  changeColor = () => {
    const h = random(1,7);
    const t = random(200,1000);
    const hole = document.querySelector(`.hole${h}`);
    hole.dataset.active = 'yes';
    hole.classList.add('changeColor');
    setTimeout(() => {
      hole.dataset.active = 'no';
      hole.classList.remove('changeColor');
      if (this.state.time) {
        this.changeColor();
      }
    }, t)
  }

  playGame = () => {
    this.setState({score: 0, game: false, time: true});
    setTimeout(() => {
      this.changeColor();
      setTimeout(() => {
        this.setState({time: false, game: true});
      }, 10000);
    }, 1000);    
  }

  render() {
    let holes = [];
    for (let n = 1; n < 7; n++) {
      holes.push(<Hole whenHoleClick={this.onClickHole} no={n} key={n} />)
    }

    return (
      <div className="game_box">
        <p className="description"><span>Game description:</span><br/>To get points click on different colored frogs.<br/>Game last 10s.</p>
        <div className="board">
          <p className="score">
            Score:
            <span> {this.state.score}</span>
          </p>
          { this.checkButton() }
        </div>
        <div className="holes_box">
          {holes}
        </div>
      </div>
    )
  }
}

export default Game;